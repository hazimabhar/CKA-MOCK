Create a statefulset for Mysql which gets the following information from the secret file in the opaque format:

MYSQL_ROOT_PASSWORD
MYSQL_DATABASE
MYSQL_PASSWORD
MYSQL_USER

k create secret generic mysql-secret --from-literal=MYSQL_ROOT_PASSWORD=admin --from-literal=MYSQL_DATABASE=admin --from-literal=MYSQL_PASSWORD=admin --from-literal=MYSQL_USER=admin --dry-run -o yaml > dbscrt.yaml

apiVersion: v1
kind: Service
metadata:
  name: db-service
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
    name: mysql
  clusterIP: None
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql # has to match .spec.template.metadata.labels
  serviceName: "db-service"
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mysql # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql
        image: mysql:lts   
        envFrom:
          - secretRef:
              name: mysql-secret
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: www
          mountPath: /
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-path"
      resources:
        requests:
          storage: 1Gi